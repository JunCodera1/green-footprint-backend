name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          POSTGRES_DB: green_footprint_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate --schema=src/database/prisma/schema.prisma

      - name: Setup test database
        run: |
          npx prisma migrate deploy --schema=src/database/prisma/schema.prisma || npx prisma migrate dev --name init --schema=src/database/prisma/schema.prisma
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/green_footprint_test

      - name: Run linting
        run: npm run lint

      - name: Run unit tests
        run: npm test
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/green_footprint_test
          NODE_ENV: test

      - name: Run e2e tests
        run: npm run test:e2e || echo "No e2e tests found"
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/green_footprint_test
          NODE_ENV: test

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate --schema=src/database/prisma/schema.prisma

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
