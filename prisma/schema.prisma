generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  firstName String?
  lastName  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]   @relation("UserToPosts") // Đặt tên cho quan hệ
  profile   Profile? @relation("UserToProfile")

  // Relations
  activities Activity[]
  goals      Goal[]

  @@map("users")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)

  author   User @relation("UserToPosts", fields: [authorId], references: [id])
  authorId Int
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation("UserToProfile", fields: [userId], references: [id])
  userId Int     @unique
}

model Activity {
  id          Int          @id @default(autoincrement())
  userId      Int
  type        ActivityType
  description String?
  carbonValue Float // CO2 equivalent in kg
  date        DateTime     @default(now())
  createdAt   DateTime     @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id])

  @@map("activities")
}

model Goal {
  id           Int      @id @default(autoincrement())
  userId       Int
  targetValue  Float // Target CO2 reduction in kg
  currentValue Float    @default(0)
  deadline     DateTime
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id])

  @@map("goals")
}

enum ActivityType {
  TRANSPORTATION
  ENERGY
  FOOD
  WASTE
  WATER
  OTHER
}
